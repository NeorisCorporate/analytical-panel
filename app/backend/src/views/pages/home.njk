<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <title>{{ head.titlePage }}</title>
    <meta charset="UTF-8">
    <meta name="author" content="{{ head.author }}">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-57x57.png"          sizes="57x57">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-60x60.png"          sizes="60x60">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-72x72.png"          sizes="72x72">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-76x76.png"          sizes="76x76">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-114x114.png"        sizes="114x114">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-120x120.png"        sizes="120x120">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-144x144.png"        sizes="144x144">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-152x152.png"        sizes="152x152">
    <link rel="apple-touch-icon" href="../images/favicons/apple-icon-180x180.png"        sizes="180x180">
    <link rel="icon" type="image/png" href="../images/favicons/android-icon-192x192.png" sizes="192x192">
    <link rel="icon" type="image/png" href="../images/favicons/favicon-32x32.png"        sizes="32x32">
    <link rel="icon" type="image/png" href="../images/favicons/favicon-96x96.png"        sizes="96x96">
    <link rel="icon" type="image/png" href="../images/favicons/favicon-16x16.png"        sizes="16x16">
    <link rel="stylesheet" href="../css/frameworks/bootstrap.min.css">
    <link rel="stylesheet" href="../css/librarys/bootstrap-select.min.css">
    <link rel="stylesheet" href="../css/librarys/chartjs.css">
    <link rel="stylesheet" href="../css/fonts/trebuchet.css">
    <link rel="stylesheet" href="../css/fonts/verdana.css">
    <link rel="stylesheet" href="../css/fonts/icons.css">
    <link rel="stylesheet" href="../css/utilities/colors.css">
    <link rel="stylesheet" href="../css/utilities/borders.css">
    <link rel="stylesheet" href="../css/utilities/scrollbar.css">
    <link rel="stylesheet" href="../css/utilities/loadings-spinners.css">
    <link rel="stylesheet" href="../css/templates/headers/main.css">
    <link rel="stylesheet" href="../css/templates/cards/graphs/mains/home.css">
    <link rel="stylesheet" href="../css/templates/cards/graphs/secondarys/home.css">
</head>
<body class="scrollbar-lilac-2 p-0">
    <!-- TEMPORÁRIO -->
    {% include 'others/loading-spinner.njk' %}
        
    <!-- TEMPLATES [headers, buttons, cards]-->
    {% include 'headers/main.njk' %}
    {% include 'buttons/modals/filter.njk' %}
    {% include 'cards/graphs/mains/home.njk' %}
    {% include 'cards/graphs/secondarys/home.njk' %}



    <!-- JAVASCRIPT CONFIGURATION -->
    <script src="../js/librarys/jquery/jquery.slim.min.js"></script>
    <script src="../js/librarys/popper/popper.min.js"></script>
    <script src="../js/librarys/chartjs/chartjs.min.js"></script>
    <script src="../js/frameworks/bootstrap/bootstrap.min.js"></script>
    <script src="../js/librarys/bootstrap-select/bootstrap-select.js"></script>
    <script src="../js/scripts/others/loading-spinner.js"></script>
    
    <!-- TEMPORÁRIO -->
    <script>
        const loadingSpinnerContainer = document.getElementById('loadingSpinner');
        const loadingSpinner = new LoadingSpinner();
        loadingSpinner.removeBodyScroll();

        const timeout = setTimeout(() => { 
            loadingSpinner.activeBodyScroll();
            loadingSpinner.removeBodyLoadingContainer();
        }, 3000);
    </script>

    <script>
            // PLUGINS
    const zeroCompensation = {
        id: 'zeroCompensation',
        beforeDatasetsDraw: function(chart) {
            const meta = chart.getDatasetMeta(0);
            meta.data.forEach(graphElement => {
                const graphElementHeight = graphElement._view.base - graphElement._view.y;
                const absoluteGraphElementHeight = Math.abs(graphElementHeight);
                const numberSign = Math.sign(absoluteGraphElementHeight) || 1;
                const minGraphElementHeight = 5;

                if(absoluteGraphElementHeight < minGraphElementHeight){
                    graphElement._view.y = graphElement._view.base - (minGraphElementHeight * numberSign);
                }
            });
        }
    };
    /* VENDA CHART */
    

            var ctx = document.getElementById("mainChartjs").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                plugins: [zeroCompensation],
                data: {
                    labels: ["jan", "fev", "mar", "abr", "mai", "jun", "ago", "set", "out", "nov", "dez"],
                    datasets: [{
                        label: 'TÍTULO DA LABEL',
                        data: [12, 19, 0, 0.1, -0.9, 3, 100, 6, 9, 12, 4],
                        backgroundColor: [
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(133, 222, 252)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                            'rgb(202, 216, 229)',
                        ],
                        borderColor: [
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                            'rgba(0,0,0,0.3)',
                        ],
                        borderWidth: 1,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    legend: { display: false },
                    scales: {
                        yAxes: [{
                            ticks: {
                                display: false,
                                fontColor: "rgb(255,255,255)"
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                        }],
                        xAxes: [{
                            ticks: {
                                fontSize: 11,
                                fontColor: "rgb(255,255,255)"
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            }
                        }]
                    },
                    animation: {
                        duration: 5000,
                        onProgress: function () {
                            var chartInstance = this.chart,
                                ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString('17', 'normal', Chart.defaults.global.defaultFontFamily);
                                ctx.fillStyle =    'white';
                                ctx.textAlign =    'center';
                                ctx.textBaseline = 'bottom';
                                Chart.helpers.each(this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    Chart.helpers.each(meta.data.forEach(function (bar, index) {
                                        var centerPoint = bar.getCenterPoint();
                                        ctx.fillText(dataset.data[index], centerPoint.x, centerPoint.y);
                                        }), this);
                                }), this);
                        },
                        onComplete: function () {
                            var chartInstance = this.chart,
                                ctx = chartInstance.ctx;
                                ctx.font = Chart.helpers.fontString('17', 'normal', Chart.defaults.global.defaultFontFamily);
                                ctx.fillStyle =    'white';
                                ctx.textAlign =    'center';
                                ctx.textBaseline = 'bottom';
                                Chart.helpers.each(this.data.datasets.forEach(function (dataset, i) {
                                    var meta = chartInstance.controller.getDatasetMeta(i);
                                    Chart.helpers.each(meta.data.forEach(function (bar, index) {
                                        var centerPoint = bar.getCenterPoint();
                                        ctx.fillText(dataset.data[index], centerPoint.x, centerPoint.y);
                                        }), this);
                                }), this);
                        }
                    }
                }
            });

            /* ALUGUEL CHART */
            var ctx = document.getElementById("aluguelChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["jan"],
                    datasets: [{
                        label: 'TÍTULO DA LABEL',
                        data: [100],
                        backgroundColor: [ 'rgb(40, 167, 69)' ],
                        borderColor: [ 'rgba(0,0,0,0.3)' ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    legend: { display: false },
                    scales: {
                        yAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                        }],
                        xAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            }
                        }]
                    },
                }
            });
                    
            /* INADIMPLÊNCIA CHART */
            var ctx = document.getElementById("inadimplenciaChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["fev"],
                    datasets: [{
                        label: 'TÍTULO DA LABEL',
                        data: [0.1],
                        backgroundColor: [ 'rgb(40, 167, 69)' ],
                        borderColor: [ 'rgba(0,0,0,0.3)' ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    legend: { display: false },
                    
                    scales: {
                        yAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                        }],
                        xAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            }
                        }]
                    },
                }
            });
                        
            /* TAXA DE OCUPAÇÃO CHART */
            var ctx = document.getElementById("taxaOcupacaoChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["mar"],
                    datasets: [{
                        label: 'TÍTULO DA LABEL',
                        data: [-0.1],
                        backgroundColor: [ 'rgb(220,53,69)' ],
                        borderColor: [ 'rgba(0,0,0,0.3)' ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    legend: { display: false },
                    scales: {
                        yAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                        }],
                        xAxes: [{
                            ticks: { display: false },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            }
                        }]
                    },
                }
            });
    </script>
</body>
</html>